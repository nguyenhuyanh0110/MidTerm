#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mid_term
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="midCoQuan")]
	public partial class midcoquanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBoPhan(BoPhan instance);
    partial void UpdateBoPhan(BoPhan instance);
    partial void DeleteBoPhan(BoPhan instance);
    partial void InsertDONVI(DONVI instance);
    partial void UpdateDONVI(DONVI instance);
    partial void DeleteDONVI(DONVI instance);
    #endregion
		
		public midcoquanDataContext() : 
				base(global::Mid_term.Properties.Settings.Default.midCoQuanConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public midcoquanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public midcoquanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public midcoquanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public midcoquanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BoPhan> BoPhans
		{
			get
			{
				return this.GetTable<BoPhan>();
			}
		}
		
		public System.Data.Linq.Table<DONVI> DONVIs
		{
			get
			{
				return this.GetTable<DONVI>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BoPhan")]
	public partial class BoPhan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MABP;
		
		private string _TENBP;
		
		private EntitySet<DONVI> _DONVIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMABPChanging(string value);
    partial void OnMABPChanged();
    partial void OnTENBPChanging(string value);
    partial void OnTENBPChanged();
    #endregion
		
		public BoPhan()
		{
			this._DONVIs = new EntitySet<DONVI>(new Action<DONVI>(this.attach_DONVIs), new Action<DONVI>(this.detach_DONVIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABP", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MABP
		{
			get
			{
				return this._MABP;
			}
			set
			{
				if ((this._MABP != value))
				{
					this.OnMABPChanging(value);
					this.SendPropertyChanging();
					this._MABP = value;
					this.SendPropertyChanged("MABP");
					this.OnMABPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENBP", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENBP
		{
			get
			{
				return this._TENBP;
			}
			set
			{
				if ((this._TENBP != value))
				{
					this.OnTENBPChanging(value);
					this.SendPropertyChanging();
					this._TENBP = value;
					this.SendPropertyChanged("TENBP");
					this.OnTENBPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoPhan_DONVI", Storage="_DONVIs", ThisKey="MABP", OtherKey="MABP")]
		public EntitySet<DONVI> DONVIs
		{
			get
			{
				return this._DONVIs;
			}
			set
			{
				this._DONVIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONVIs(DONVI entity)
		{
			this.SendPropertyChanging();
			entity.BoPhan = this;
		}
		
		private void detach_DONVIs(DONVI entity)
		{
			this.SendPropertyChanging();
			entity.BoPhan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONVI")]
	public partial class DONVI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MADV;
		
		private string _TENDV;
		
		private System.Nullable<System.DateTime> _NGAYTL;
		
		private string _MABP;
		
		private EntityRef<BoPhan> _BoPhan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMADVChanging(string value);
    partial void OnMADVChanged();
    partial void OnTENDVChanging(string value);
    partial void OnTENDVChanged();
    partial void OnNGAYTLChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTLChanged();
    partial void OnMABPChanging(string value);
    partial void OnMABPChanged();
    #endregion
		
		public DONVI()
		{
			this._BoPhan = default(EntityRef<BoPhan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MADV", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MADV
		{
			get
			{
				return this._MADV;
			}
			set
			{
				if ((this._MADV != value))
				{
					this.OnMADVChanging(value);
					this.SendPropertyChanging();
					this._MADV = value;
					this.SendPropertyChanged("MADV");
					this.OnMADVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENDV", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TENDV
		{
			get
			{
				return this._TENDV;
			}
			set
			{
				if ((this._TENDV != value))
				{
					this.OnTENDVChanging(value);
					this.SendPropertyChanging();
					this._TENDV = value;
					this.SendPropertyChanged("TENDV");
					this.OnTENDVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTL", DbType="DateTime")]
		public System.Nullable<System.DateTime> NGAYTL
		{
			get
			{
				return this._NGAYTL;
			}
			set
			{
				if ((this._NGAYTL != value))
				{
					this.OnNGAYTLChanging(value);
					this.SendPropertyChanging();
					this._NGAYTL = value;
					this.SendPropertyChanged("NGAYTL");
					this.OnNGAYTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MABP", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string MABP
		{
			get
			{
				return this._MABP;
			}
			set
			{
				if ((this._MABP != value))
				{
					if (this._BoPhan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMABPChanging(value);
					this.SendPropertyChanging();
					this._MABP = value;
					this.SendPropertyChanged("MABP");
					this.OnMABPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BoPhan_DONVI", Storage="_BoPhan", ThisKey="MABP", OtherKey="MABP", IsForeignKey=true)]
		public BoPhan BoPhan
		{
			get
			{
				return this._BoPhan.Entity;
			}
			set
			{
				BoPhan previousValue = this._BoPhan.Entity;
				if (((previousValue != value) 
							|| (this._BoPhan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BoPhan.Entity = null;
						previousValue.DONVIs.Remove(this);
					}
					this._BoPhan.Entity = value;
					if ((value != null))
					{
						value.DONVIs.Add(this);
						this._MABP = value.MABP;
					}
					else
					{
						this._MABP = default(string);
					}
					this.SendPropertyChanged("BoPhan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
